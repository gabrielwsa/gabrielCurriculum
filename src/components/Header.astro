---
import ThemeToggle from "./ThemeToggle.astro"

const navItems = [
  {
    title: "Inicio",
    label: "inicio",
    url: "/#inicio",
  },
  {
    title: "Experiencia",
    label: "experiencia",
    url: "/#experiencia",
  },
  {
    title: "Proyectos",
    label: "proyectos",
    url: "/#proyectos",
  },
  {
    title: "Certificaciones",
    label: "Certificados",
    url: "/#Certificados",
  },
  {
    title: "Sobre m√≠",
    label: "sobre-mi",
    url: "/#sobre-mi",
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "mailto:gabrielsilvadearaujo45@gmail.com",
  },
]
---

<header
  class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2"
>
  <nav
    class="flex px-3 text-sm font-medium rounded-full text-gray-600 dark:text-gray-200 justify-between items-center w-full md:w-1/2 transition-all duration-300 tracking-wider"
  >
    <button
      id="mobile-menu-button"
      class="md:hidden p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700"
      aria-label="Toggle menu"
    >
      <svg
        class="w-6 h-6"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"
        />
      </svg>
    </button>

    <div
      id="nav-menu"
      class="fixed top-0 right-0 h-screen w-64 bg-white dark:bg-gray-800 transform translate-x-full transition-transform duration-300 ease-in-out md:relative md:translate-x-0 md:h-auto md:w-auto md:bg-transparent md:dark:bg-transparent md:flex md:items-center"
    >
      {
        navItems.map((link) => (
          <a
            class="relative block px-4 py-3 transition hover:text-blue-500 dark:hover:text-blue-500"
            aria-label={link.label}
            href={link.url}
          >
            {link.title}
          </a>
        ))
      }
    </div>
    <ThemeToggle />
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")
    const mobileMenuButton = document.getElementById("mobile-menu-button")
    const navMenu = document.getElementById("nav-menu")
    const body = document.body

    // Mobile menu toggle
    mobileMenuButton?.addEventListener("click", () => {
      const isOpen = !navMenu?.classList.contains("translate-x-full")
      if (isOpen) {
        navMenu?.classList.add("translate-x-full")
        body.classList.remove("overflow-hidden")
      } else {
        navMenu?.classList.remove("translate-x-full")
        body.classList.add("overflow-hidden")
      }
    })

    // Close menu when clicking on a link
    navItems.forEach(item => {
      item.addEventListener("click", () => {
        navMenu?.classList.add("translate-x-full")
        body.classList.remove("overflow-hidden")
      })
    })

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-blue-500")
            } else {
              item.classList.remove("text-blue-500")
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 1.0,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  nav {
    @apply dark:bg-gray-800/90 bg-white/50;
  }

  @keyframes nav-shadown {
    0% {
      @apply dark:bg-gray-800/0 bg-white/0;
    }
    to {
      @apply shadow-lg ring-1 backdrop-blur ring-white/10;
    }
  }
</style>
